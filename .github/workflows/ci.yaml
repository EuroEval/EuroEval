name: CI

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
    branches:
      - main

jobs:
  lint:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: jpetrucciani/ruff-check@main

  pytest-linux:
    if: github.event.pull_request.draft == false
    strategy:
        matrix:
            python-version: ["3.10", "3.11"]

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Poetry
        run: pipx install poetry==1.7.1

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"

      - name: Install Dependencies
        run: |
          poetry env use "${{ matrix.python-version }}"
          poetry install

      - name: Test with pytest
        run: poetry run pytest
        env:
          HUGGINGFACE_HUB_TOKEN: ${{ secrets.HUGGINGFACE_HUB_TOKEN }}

      - name: Delete ScandEval cache
        run: rm -rf .scandeval_cache

  pytest-macos:
    if: github.event.pull_request.draft == false && contains(github.event.pull_request.labels.*.name, 'macos')
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Poetry
        run: pipx install poetry

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10
          cache: "poetry"

      - name: Install Dependencies
        run: |
          poetry env use "${{ matrix.python-version }}"
          poetry install --extras all

      - name: Test with pytest
        run: poetry run pytest
        env:
          HUGGINGFACE_HUB_TOKEN: ${{ secrets.HUGGINGFACE_HUB_TOKEN }}

      - name: Delete ScandEval cache
        run: rm -rf .scandeval_cache
